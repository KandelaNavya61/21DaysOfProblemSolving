2Q) Minimum Equal Sum of Two Arrays After Replacing Zeros
You are given two arrays nums1 and nums2 consisting of positive integers.
You have to replace all the 0's in both arrays with strictly positive integers such that the sum of elements of both arrays becomes equal.
Return the minimum equal sum you can obtain, or -1 if it is impossible.
Example 1:
Input: nums1 = [3,2,0,1,0], nums2 = [6,5,0]
Output: 12
Explanation: We can replace 0's in the following way:
- Replace the two 0's in nums1 with the values 2 and 4. The resulting array is nums1 = [3,2,2,1,4].
- Replace the 0 in nums2 with the value 1. The resulting array is nums2 = [6,5,1].
Both arrays have an equal sum of 12. It can be shown that it is the minimum sum we can obtain.
Example 2:
Input: nums1 = [2,0,2,0], nums2 = [1,4]
Output: -1
Explanation: It is impossible to make the sum of both arrays equal.
Constraints:
1 <= nums1.length, nums2.length <= 105
0 <= nums1[i], nums2[i] <= 106

import java.io.*;
import java.util.*;
public class Main{
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        int n = sc.nextInt();
        int[] nums1 = new int[n];
        for(int i=0; i<n; i++){
            nums1[i] = sc.nextInt();
        }
        int m = sc.nextInt();
        int[] nums2 = new int[m];
        for(int i=0; i<m; i++){
            nums2[i] = sc.nextInt();
        }
        long sum1=0, sum2=0;
        int zero1=0, zero2=0;
        for(int i:nums1){
            if(i==0) zero1++;
            sum1+=i;
        }
        for(int i:nums2){
            if(i==0) zero2++;
            sum2+=i;
        }
        if(zero1==0 && zero2==0){
            System.out.println(sum1==sum2 ? sum1 : -1);
             return;
        }
        long min1 = sum1 + zero1; 
        long min2 = sum2 + zero2; 
        if (min1>min2 && zero2==0){
             System.out.println("-1");
             return;
        }
        if (min2>min1 && zero1==0){
             System.out.println("-1");
             return;
        }
        long finalSum = Math.max(min1, min2);
        System.out.println(finalSum);
    }
}

Time Complexity: O(n + m)
Reading input: O(n) for nums1 and O(m) for nums2.
Calculating sums and zero counts: one pass through each array → again O(n) and O(m).
A few constant-time checks and arithmetic operations: O(1).

Space Complexity: O(n + m)
nums1 array → size n → O(n)
nums2 array → size m → O(m)
Other variables (sum1, sum2, zero1, etc.) → just a few long/int variables → O(1)
